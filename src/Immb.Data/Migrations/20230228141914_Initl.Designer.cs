// <auto-generated />
using System;
using Immb.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Immb.Data.Migrations
{
    [DbContext(typeof(MeuDbContext))]
    [Migration("20230228141914_Initl")]
    partial class Initl
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Immb.Business.Models.Endereco", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("varchar(8)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Complemento")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<Guid>("MembroId");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("MembroId")
                        .IsUnique();

                    b.ToTable("Enderecos");
                });

            modelBuilder.Entity("Immb.Business.Models.Membro", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DataOutorga");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<int>("Telefone");

                    b.Property<Guid>("UnidadeReligiosaId");

                    b.HasKey("Id");

                    b.HasIndex("UnidadeReligiosaId");

                    b.ToTable("Membros");
                });

            modelBuilder.Entity("Immb.Business.Models.UnidadeReligiosa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<int>("TipoUnidade");

                    b.HasKey("Id");

                    b.ToTable("Unidades");
                });

            modelBuilder.Entity("Immb.Business.Models.Endereco", b =>
                {
                    b.HasOne("Immb.Business.Models.Membro", "Membro")
                        .WithOne("Endereco")
                        .HasForeignKey("Immb.Business.Models.Endereco", "MembroId");
                });

            modelBuilder.Entity("Immb.Business.Models.Membro", b =>
                {
                    b.HasOne("Immb.Business.Models.UnidadeReligiosa", "UnidadeReligiosa")
                        .WithMany("Membros")
                        .HasForeignKey("UnidadeReligiosaId");
                });
#pragma warning restore 612, 618
        }
    }
}
